//tag::gitPublish[]


buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.ajoberstar:gradle-git-publish:2.1.1"
  }
}

apply plugin: "org.ajoberstar.git-publish"

gitPublish {
    // where to publish to (repo must exist)
    repoUri = 'http://github.conti.de/dueringm/playground_dueringm.git'
    // ('git@github.com:ajoberstar/test-repo.git' or 'http://github.conti.de/PSS-ECC/de.conti.pss.ecc.AFLOW.git', depending on authentication)

    // where to fetch from prior to fetching from the remote (i.e. a local repo to save time)
    //referenceRepoUri = 'file:///./build/git_repo/'

    // branch will be created if it doesn't exist
    branch = 'gh-pages'

    // generally, you don't need to touch this
    repoDir = file("$buildDir/somewhereelse") // defaults to $buildDir/gitPublish

    // what to publish, this is a standard CopySpec
    contents {
        from 'build/docs/html5'
    }

    // what to keep in the existing branch (include=keep)
    preserve {
        exclude '**'
    }

    // message used when committing changes
    commitMessage = 'Update after Jenkins build' // defaults to 'Generated by gradle-git-publish'
}

//end::gitPublish[]